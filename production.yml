services:
  store:
      image: ghcr.io/ahmadbsat/menuproject-backend:production
      labels:
      - "traefik.enable=true"
      - "traefik.http.services.store.loadbalancer.sticky=true"
      - "traefik.http.services.store.loadbalancer.sticky.cookie.name=StoreSessionCookie"
      - "traefik.http.services.store.loadbalancer.sticky.cookie.secure=true"
      - "traefik.http.services.store.loadbalancer.server.port=8080"
      - "traefik.docker.network=store"
      - "traefik.http.routers.store.rule=Host(`api.fmcshops.com`)"
      - "traefik.http.routers.store.entrypoints=websecure"
      - "traefik.http.routers.store.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
      restart: always
      depends_on:
        - mongodb
        - reverse-proxy
      env_file:
        - .env
      networks:
        - store
      volumes:
        - /home/ahmad/.docker/config.json:/config.json
      deploy:
        mode: replicated
        replicas: 2

  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
      - "--cleanup"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ahmad/.docker/config.json:/config.json

  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=ahmad.bsat.15.3@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - store
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  mongodb:
    hostname: mongodb
    container_name: mongodb_primary
    image: mongo:8.0.3
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=user
    #   - MONGO_INITDB_ROOT_PASSWORD=pass
    restart: unless-stopped
    networks:
      - store
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb

networks:
  store:
    name: store

volumes:
  mongodb_data:
  mongodb_config: